<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: misc | Cup of Java]]></title>
  <link href="http://cupofjava.de/blog/categories/misc/atom.xml" rel="self"/>
  <link href="http://cupofjava.de/"/>
  <updated>2013-02-05T20:06:36+01:00</updated>
  <id>http://cupofjava.de/</id>
  <author>
    <name><![CDATA[Felix Müller]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Talented and highly skilled developers needed]]></title>
    <link href="http://cupofjava.de/blog/2013/02/03/talented-and-highly-skilled-developers-needed/"/>
    <updated>2013-02-03T13:22:00+01:00</updated>
    <id>http://cupofjava.de/blog/2013/02/03/talented-and-highly-skilled-developers-needed</id>
    <content type="html"><![CDATA[<p>Highly skilled developers want to work with other highly skilled and smart developers. That's what I can tell so far. You are really running into serious problems if you are loosing all the highly skilled ones which rock your projects and initiate changes to improve the way work is done in your organization. Maybe I am too harsh and unfair but I think you need highly skilled developers and talents to be able to adapt to new technologies and markets.<!-- more --></p>

<p>If you cannot hold your best ones you are facing many other problems:</p>

<ul>
<li>hiring other great developers becomes more difficult because the more smart one developer is the more he wants to work with other even smarter developers to learn, to improve himself and last but not least to have fun at work</li>
<li>to improve your technical staff by techniques like pair programming and code reviews becomes more difficult due the smart developers are away</li>
<li>your internal code quality may decrease or you may become slower at delivering valuable software</li>
<li>if your code quality decreases, it makes it even less attractive for smart developers to join your company (none of them want to deal with a shitty codebase although everyone of them may read "Working Effectively with Legacy Code" by Michael Feathers)</li>
</ul>


<p>On the other hand we are actually facing a shift from "one developer hero rescues the world/project" to "we develop a strong team, where super-programmers are not needed anymore". Yeah, that's the theory and it sounds great. But medicore developers do not learn new technologies, methods, frameworks and programming languages in there spare time. It's not their passion. And that is OK. I think that great developers make the difference between "just another IT company" and "company that leads the change in IT".</p>

<p>So, I think you need those great and smart developers if you want to adapt to new technologies and markets.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My (little late) Personal Tech Retroperspective of 2012]]></title>
    <link href="http://cupofjava.de/blog/2013/01/27/my-little-late-personal-tech-retroperspective-of-2012/"/>
    <updated>2013-01-27T19:25:00+01:00</updated>
    <id>http://cupofjava.de/blog/2013/01/27/my-little-late-personal-tech-retroperspective-of-2012</id>
    <content type="html"><![CDATA[<p>With this post I start a new series in this blog: At every beginning of a new year I wanna do a retroperspective (motivated by Agile…) of the technical stuff in my life that happens during the last year. Mostly about the stuff I learned. So, here it goes and I hope it does not annoy you too much.<!--more--></p>

<h3>Achievements</h3>

<ul>
<li>gained a lot experience in working in teams and how to manage critical situations</li>
<li>improved knowledge about continuous delivery</li>
<li>improved skills in TDD, BDD, ATDD</li>
<li>gained more experience in managing code quality</li>
<li>improved skills in scripting builds</li>
<li>improved usage of <a href="http://www.sonarsource.org">Sonar</a></li>
<li>held many talks on conferences and events about testing, Sonar and Scala</li>
<li>finally started this blog :-)</li>
</ul>


<h3>Technologies</h3>

<ul>
<li>Play Framework 1 &amp; 2 (Java, Scala)</li>
<li>RabbitMQ, only for a spike but I enjoyed it a lot</li>
<li>Elasticsearch, bad documentation but nevertheless a great technology</li>
<li>MongoDB, the classic NoSql store</li>
<li>Redis</li>
<li>Spring MVC mostly for building REST apis</li>
<li>JavaScript, oh geez a lot of JavaScript</li>
<li>AngularJS, only a bit</li>
<li>PhoneGap, the I/O related part for iOS</li>
<li>Vagrant for setting up dev VMs</li>
<li>Chef, only changing some configuration in existing scripts</li>
<li>Ruby for web development</li>
<li>Sinatra for a tiny web project, great framework</li>
</ul>


<h3>Events</h3>

<ul>
<li>visited many Java Usergroup Berlin events</li>
<li>attended some conferences: BedCon, gearconf, Java Forum Stuttgart</li>
<li>organized tech talks at my current employer, <a href="http://adesso.de">adesso AG</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
